#include<iostream>
#include<gmpxx.h>

using namespace std;

mpz_class N,x,y,p,c,tmp,ans;

mpz_class gcd(mpz_class a, mpz_class b) {
    mpz_class r;
    while (b!=0) {
        r = a%b;
        a=b;
        b=r;
    }
    return a;
}

mpz_class pow(mpz_class x, mpz_class n, mpz_class mod) {
    mpz_class r = 1;
    while (n!=0) {
        if (n %2 ==1)
            r = r * x % mod;
        n >>= 1;
        x = x * x % mod;
    }
    return r;
}

mpz_class g(mpz_class x) {
    mpz_class tt=pow(x,p,N);
    return (tt+3)%N;
}

int main() {
    N = "66440102893604812770954431264785578353057204508844048599110753718247232468697025964155929061764714174006088583935707244558090770031495790737798905243080855160975779336691568975751572970630511894422679693156941470363422684755446575698801961093869186892859191863640587556200014348072499993847763752221507623365127483289004869226240945457134006744597248683509448171183912304510311998524237955662549893521102016681284600494822269268443257579395390043923784710887867356489367623325055765423641270723201592319801187992335895375813985997133335457604641435392127125769960891606322932057280759073198359829272364806462005751573";
    x="2";
    y="2";
    c="3";
    p=N-1;
    ans=1;
    while (ans==1) {
        x=g(x);
        y=g(g(y));
        if (x>y)
            tmp=x-y;
        else
            tmp=y-x;
        ans=gcd(tmp,N);
    }
    cout<<ans<<endl;
    return 0;
}
